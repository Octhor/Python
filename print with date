import d3dshot
from time import gmtime, strftime, localtime
from pynput.keyboard import Key, KeyCode, Listener

def workingset():
    d = d3dshot.create(capture_output="pil")
    d.display = d.displays[1]
    d.screenshot_to_disk(file_name=str(strftime("%d.%m_%H.%M_", localtime()) + 'Workingset') + '.png')

def errors():
    d = d3dshot.create(capture_output="pil")
    d.display = d.displays[1]
    d.screenshot_to_disk(file_name=str(strftime("%d.%m_%H.%M_", localtime()) + 'Erros') + '.png')

def book():
    d = d3dshot.create(capture_output="pil")
    d.display = d.displays[1]
    d.screenshot_to_disk(file_name=str(strftime("%d.%m_%H.%M_", localtime()) + 'BookTotal_MÃ©dia') + '.png')

# Create a mapping of keys to function (use frozenset as sets are not hashable - so they can't be used as keys)
combination_to_function = {
    frozenset([Key.shift, KeyCode(char='W')]): workingset,
    frozenset([Key.shift, KeyCode(char='w')]): workingset,
    frozenset([Key.shift, KeyCode(char='E')]): errors,
    frozenset([Key.shift, KeyCode(char='e')]): errors,
    frozenset([Key.shift, KeyCode(char='B')]): book,
    frozenset([Key.shift, KeyCode(char='b')]): book,
}

# Currently pressed keys
current_keys = set()

def on_press(key):
    # When a key is pressed, add it to the set we are keeping track of and check if this set is in the dictionary
    current_keys.add(key)
    if frozenset(current_keys) in combination_to_function:
        # If the current set of keys are in the mapping, execute the function
        combination_to_function[frozenset(current_keys)]()

def on_release(key):
    # When a key is released, remove it from the set of keys we are keeping track of
    current_keys.remove(key)

with Listener(on_press=on_press, on_release=on_release) as listener:
    listener.join()
